name: Build - all supported platforms

on: 
  # A release, pre-release, or draft of a release is published
  release:
    types: published
  # Manual
  workflow_dispatch: {}

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          #- StandaloneWindows # Build a Windows 32-bit standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
          #- WebGL # WebGL.
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - name: Cache libraries
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
  
  UploadArtifacts:
    name: Upload build artifact for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: buildForAllSupportedPlatforms
    steps:
      # Require manual reviewer approval
      #- name: Require manual intervention
      #  uses: trstringer/manual-approval@v1
      #  with:
      #    secret: ${{ github.TOKEN }}
      #    approvers: SethCram
      
      # Output build
      - name: Output build
        uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
  #CreateInstaller:
  #  name: Create the Windows installer
  #  needs: UploadArtifact
  #  runs-on: windows
  
  #UploadWebGL:
    
