name: Build - all supported platforms

on: 
  # A release, pre-release, or draft of a release is published
  release:
    types: published
  # Manual
  workflow_dispatch: {}

env:
  NAME_OF_GAME: Friday\ the\ 13th\ Game

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          #- StandaloneWindows # Build a Windows 32-bit standalone.
          #- StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
          #- WebGL # WebGL.
          
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - name: Cache libraries
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic
          buildName: ${{ env.NAME_OF_GAME }}-${{ matrix.targetPlatform }}
      
      # Require manual reviewer approval within 20 mins or fail
      - name: Require manual intervention
        uses: trstringer/manual-approval@v1
        timeout-minutes: 20 
        with:
          secret: ${{ github.TOKEN }}
          approvers: SethCram
          issue-title: Deploying ${{ env.NAME_OF_GAME }}-${{ matrix.targetPlatform }} build to artifactory
      
      # Give exe privileges to mac build 
      - name: Give exe privilege to MacOSX build
        if: ${{ matrix.targetPlatform == 'StandaloneOSX' }}
        run: |
          echo Name of the game is $NAME_OF_GAME
          echo Name of app folder is "${NAME_OF_GAME}-${{ matrix.targetPlatform }}.app"
          if [ ${{ matrix.targetPlatform }} == "StandaloneOSX" ]
          then
            echo 1. Navigating to build folder
            pwd
            ls
            cd build
            echo 2. Contents of build folder:
            ls 
            echo 3. Navigating to game folder
            cd StandaloneOSX
            echo 4. Contents of game folder:
            ls 
            echo 5. Navigating to App folder
            cd "${NAME_OF_GAME}-${{ matrix.targetPlatform }}.app"
            echo 6. Contents of App folder:
            ls
            echo 7. Navigating to Contents folder
            cd Contents
            echo 8. Contents of Contents folder:
            ls
            echo 9. Navigating to MacOS folder
            cd MacOS
            echo 10. Contents of MacOS folder:
            ls
            echo 11. Check to see permissions before change
            sudo ls -l
            echo 12. Running cmd to give exe privileges
            sudo chmod -R 777 "$NAME_OF_GAME"
            echo 13. Check to see if permissions changed
            sudo ls -l
            echo 14. Navigate back to og dir
            cd ..
            cd .. 
            cd ..
            cd ..
            cd .. 
            pwd
            ls
          else
            echo "No commands run bc this is a ${{ matrix.targetPlatform }} build"
          fi
      
      # Tar Mac build files to maintain file permissions
      - name: Tar MacOSX build files
        if: ${{ matrix.targetPlatform == 'StandaloneOSX' }}
        run: |
          echo Tar file should be called ${NAME_OF_GAME}.tar
          if [ ${{ matrix.targetPlatform }} == "StandaloneOSX" ]
          then
            echo 1. current path and their files:
            pwd
            ls
            echo 2. go into build dir and output files
            cd build
            ls
            echo 3. tar mac build folder + remove og files
            sudo tar -cvf "${NAME_OF_GAME}.tar" ${{ matrix.targetPlatform }} --remove-files
            echo 4. go back to src dir
            cd ..
            pwd
            ls
          else
            echo "No commands run bc this is a ${{ matrix.targetPlatform }} build"
          fi
      
      # Output tar build if mac build
      - name: Output macOSX build as artifact
        uses: actions/upload-artifact@v3
        if: ${{ matrix.targetPlatform == 'StandaloneOSX' }}
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ env.NAME_OF_GAME }}.tar
      
      # Output build if non mac build
      - name: Output non-Mac build as artifact
        uses: actions/upload-artifact@v3
        if: ${{ matrix.targetPlatform != 'StandaloneOSX' }}
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
