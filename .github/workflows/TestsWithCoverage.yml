name: Run Tests - Coverage

on: 
  # Every pull request
  pull_request: {}
  # Every push to main
  push: 
    branches: [ main ] 
  workflow_dispatch: {}

jobs:
  RunTests:
    name: Run tests - Coverage
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - name: Cache libraries
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      
      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        id: tests
        timeout-minutes: 20 #raise timeout limit
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          customParamters: -debugCodeOptimization -enableCodeCoverage
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;generateTestReferences;assemblyFilters:+*Scripts*;pathFilters:**Assets/Scripts/**'

      # Storing test results
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results
          path: artifacts
          
      # Get coverage results
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.tests.outputs.coveragePath }}
