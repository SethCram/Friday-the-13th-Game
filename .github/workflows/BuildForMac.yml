name: Build for Mac

on: 
  # A release, pre-release, or draft of a release is published
  release:
    types: published
  # Manual
  workflow_dispatch: {}

jobs:
  buildForMac:
      name: Build for Mac
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          targetPlatform:
            - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
            #- StandaloneWindows # Build a Windows 32-bit standalone.
            #- StandaloneWindows64 # Build a Windows 64-bit standalone.
            #- StandaloneLinux64 # Build a Linux 64-bit standalone.
            #- iOS # Build an iOS player.
            #- Android # Build an Android .apk standalone app.
            #- WebGL # WebGL.
      steps:
        # Checkout
        - name: Checkout repository
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
            lfs: true

        # Cache
        - name: Cache libraries
          uses: actions/cache@v2
          with:
            path: Library
            key: Library-${{ matrix.targetPlatform }}
            restore-keys: |
              Library-

        # Build
        - name: Build project
          uses: game-ci/unity-builder@v2
          id: buildStep
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: ${{ matrix.targetPlatform }}
            versioning: Semantic
            buildName: Fridaythe13th-${{ matrix.targetPlatform }}
            
        - name: Run if target plat isnt mac build
          if: ${{ matrix.targetPlatform }} != 'StandaloneOSX'
          run: |
            echo "matrix's target platform = ${{ matrix.targetPlatform }}"
            echo "Non mac build step run on mac build!"
            
            if [ ${{ matrix.targetPlatform }} != "StandaloneOSX" ]
            then 
              echo "Bash says this IS NOT a mac platform"
            else
              echo "Bash says this IS a mac platform"
            fi
            
        - name: Run if target plat doesnt contain mac build
          if: contains( ${{ matrix.targetPlatform }}, 'StandaloneOSX' ) == false
          run: |
            echo "matrix's target platform = ${{ matrix.targetPlatform }}"
            echo "Non mac build step run on mac build!"
            
            if [ ${{ matrix.targetPlatform }} != "StandaloneOSX" ]
            then 
              echo "Bash says this IS NOT a mac platform"
            else
              echo "Bash says this IS a mac platform"
            fi
            
        # Grant executable permissions
        - name: Grant executable permissions
          run: |
            echo 1. Navigating to build folder
            pwd
            ls
            cd build
            echo 2. Contents of build folder:
            ls 
            echo 3. Navigating to game folder
            cd ${{ matrix.targetPlatform }}
            echo 4. Contents of game folder:
            ls 
            echo 5. Navigating to App folder
            cd Fridaythe13th-${{ matrix.targetPlatform }}.app
            echo 6. Contents of App folder:
            ls
            echo 7. Navigating to Contents folder
            cd Contents
            echo 8. Contents of Contents folder:
            ls
            echo 9. Navigating to MacOS folder
            cd MacOS
            echo 10. Contents of MacOS folder:
            ls
            echo 11. Navigate back to og dir
            cd ..
            cd .. 
            cd ..
            cd ..
            cd .. 
            pwd
            ls
            echo 12. Running cmd to give exe privileges
            sudo chmod -R 777 /build/${{ matrix.targetPlatform }}/Fridaythe13th-${{ matrix.targetPlatform }}.app/Contents/MacOS/Friday\ the\ 13th\ Game
        
        # Tar Mac build files to maintain file permissions
        - name: Tar Mac build files
          run: |
            echo 1. current path and their files:
            pwd
            ls
            echo 2. go into build dir and output files
            cd build
            ls
            echo 3. go back to src dir
            cd ..
            pwd
            ls
            echo 4. tar mac build folder + remove og files
            sudo tar -cvf Friday\ the\ 13th.tar /build/${{ matrix.targetPlatform }} --remove-files

        # Output build
        - name: Output build as artifact
          uses: actions/upload-artifact@v3
          with:
            name: Build-${{ matrix.targetPlatform }}
            path: build/Fridaythe13th.tar
