name: Build for Mac

on: 
  # A release, pre-release, or draft of a release is published
  release:
    types: published
  # Manual
  workflow_dispatch: {}

jobs:
  buildForMac:
      name: Build for Mac
      runs-on: macos-latest
      strategy:
        fail-fast: false
        matrix:
          targetPlatform:
            - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
            #- StandaloneWindows # Build a Windows 32-bit standalone.
            #- StandaloneWindows64 # Build a Windows 64-bit standalone.
            #- StandaloneLinux64 # Build a Linux 64-bit standalone.
            #- iOS # Build an iOS player.
            #- Android # Build an Android .apk standalone app.
            #- WebGL # WebGL.
      steps:
        # Checkout
        - name: Checkout repository
          uses: actions/checkout@v2
          with:
            lfs: true

        # Cache
        - name: Cache libraries
          uses: actions/cache@v2
          with:
            path: Library
            key: Library-${{ matrix.targetPlatform }}
            restore-keys: |
              Library-

        # Build
        - name: Build project
          uses: game-ci/unity-builder@v2
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: ${{ matrix.targetPlatform }}
            
        # Run code ripped from issue
        - name: Grant executable permissions
          run: |
            cd build
            cd StandaloneOSX
            if ! type "xattr" > /dev/null; then
              echo "xattr does not exist"
              sudo apt-get update -y
              sudo apt-get install -y xattr
            else
              echo "xattr exists" 
              #xattr -cr StandaloneOSX.app
            fi
            
            xattr -cr StandaloneOSX.app

            find . -type f -iname "MapFileParser" -exec chmod +x {} \;
            find . -type f -iname "*.sh" -exec chmod +x {} \;
            find . -type f -iname "usymtool" -exec chmod +x {} \;
            find . -type f -iname "lzma" -exec chmod +x {} \;
            find . -type f -exec chmod +x {} \;
            cd ..
            cd ..
        
        # Tar Mac build files to maintain file permissions
        - name: Tar Mac build files
          run: |
            echo 1. current path and their files:
            pwd
            ls
            echo 2. go into build dir and output files
            cd build
            ls
            tar -cvf my_files.tar StandaloneOSX

        # Output build
        - name: Output build as artifact
          uses: actions/upload-artifact@v3
          with:
            name: Build-${{ matrix.targetPlatform }}
            path: build/my_files.tar
